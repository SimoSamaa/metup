@use './colors' as *;

@mixin colorsApp() {
  @each $color, $value in $colors {
    --clr-#{$color}: #{$value};
  }
}

@mixin arrowControl($class, $direction) {
  &.#{$class}::before {
    @apply content-[''] absolute border-[10px] border-transparent border-l-red-500 -right-[1.2rem] top-1/2 -translate-y-1/2;

    @if($class =='last-name') {
      @apply border-t-red-500 right-3 top-[48px] transform-none size-[10px] border-[10px] border-transparent;
    }

    @include breakpoint('md') {
      @apply transform-none size-[10px] border-[10px] border-transparent;

      @if($direction =='bottom') {
        @apply border-t-red-500 left-3 top-[47px];
      }

      @else if($direction =='top') {
        @apply border-b-red-500 left-3 -top-[18px];
      }
    }
  }
}

// MEDIA QUERIES
@mixin breakpoint($size-screen, $custom: null) {
  @if($size-screen =='sm') {
    @media (max-width: 650px) {
      @content;
    }
  }

  @else if ($size-screen =='md') {
    @media (max-width: 950px) {
      @content;
    }
  }

  @else if ($size-screen =='lg') {
    @media (max-width: 1285px) {
      @content;
    }
  }

  @else {
    @media (max-width: #{$custom}px) {
      @content;
    }
  }
}

@mixin setAnimation($name, $from-properties, $to-properties, $use-opacity) {
  .#{$name}-enter-active {
    animation: #{$name} 300ms ease;
  }

  .#{$name}-leave-active {
    animation: #{$name} 300ms ease reverse;
  }

  .#{$name}-move {
    transition: all 300ms ease;
  }

  @keyframes #{$name} {
    from {
      @if ($use-opacity =='opacity') {
        opacity: 0;
      }

      @each $property, $value in $from-properties {
        opacity: 0;
        #{$property}: $value;
      }
    }

    to {
      @if ($use-opacity =='opacity') {
        opacity: 1;
      }

      @each $property, $value in $to-properties {
        opacity: 1;
        #{$property}: $value;
      }
    }
  }
}